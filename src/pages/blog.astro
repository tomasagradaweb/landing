---
import fetchApi from '../lib/strapi';
import type Blog from '../interfaces/blog';
import { formatDate } from '../utils/dateFormatter';
import BaseLayout from '../layouts/BaseLayout.astro';
import landingData from '../data/landingData.json';
import Header from '@components/Header.astro';
import { Image } from 'astro:assets';

function extractText(description: Blog['Description']): string {
  return description
    .filter((desc) => desc.type === 'paragraph')
    .map((desc) =>
      desc.children.map((child) => child.text).join('')
    )
    .join(' ');
}

// Parámetros de paginación
const ITEMS_PER_PAGE = 6;
const currentPage = Number(Astro.url.searchParams.get('page') || '1');

// Obtener todos los blogs
const response = await fetchApi<{
  data: Blog[];
  meta: {
    pagination: {
      page: number;
      pageSize: number;
      pageCount: number;
      total: number;
    };
  };
}>({
  endpoint: 'blogs?populate=Cover&sort[0]=publishedAt:desc'
});

const allBlogs = response.data;
const featuredBlogs = allBlogs.slice(0, 3);

// Consulta paginada para los blogs no destacados
const paginatedResponse = await fetchApi<{
  data: Blog[];
  meta: {
    pagination: {
      page: number;
      pageSize: number;
      pageCount: number;
      total: number;
    };
  };
}>({
  endpoint: `blogs?populate=Cover&sort[0]=publishedAt:desc&pagination[page]=${currentPage}&pagination[pageSize]=${ITEMS_PER_PAGE}`
});

const otherBlogs = paginatedResponse.data.filter(blog => 
  !featuredBlogs.some(featured => featured.id === blog.id)
);

const totalItems = response.meta.pagination.total - 3;
const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);
---

<BaseLayout title={`Blog | ${landingData.header.title}`} description={landingData.header.description}>
  <Header bgcolor="black" />
  <main class="min-h-screen bg-white py-40">
    <div class="max-w-7xl mx-auto px-4">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-16 text-center font-montserrat">
        Nuestro Blog
      </h1>

      {allBlogs.length === 0 ? (
        <div class="text-center py-12">
          <h2 class="text-2xl text-gray-600 font-montserrat">No hay artículos disponibles</h2>
          <p class="text-gray-500 mt-2 font-roboto">Vuelve más tarde para ver nuevo contenido</p>
        </div>
      ) : (
        <>
          <div class="grid grid-cols-12 gap-6 mb-24 h-[800px]">
            {featuredBlogs.map((blog, index) => {
              const coverUrl = blog.Cover?.url
                ? `${import.meta.env.STRAPI_URL}${blog.Cover.url}`
                : '/placeholder-image.jpg';

              return (
                <a 
                  href={`/blog/${blog.slug}/`}
                  class={`relative group overflow-hidden rounded-3xl ${
                    index === 0 ? 'col-span-6 row-span-2' : 
                    index === 1 ? 'col-span-6 row-span-1' : 
                    'col-span-6 row-span-1'
                  }`}
                >
                  <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/10 to-black/70 z-10 
                            opacity-60 transition-opacity duration-300 group-hover:opacity-75"></div>
                  <Image 
                    src={coverUrl}
                    alt={blog.Title}
                    width={800}
                    height={index === 0 ? 800 : 400}
                    class="absolute inset-0 w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                  />
                  <div class="absolute bottom-0 left-0 right-0 p-6 z-20">
                    <h2 class="text-xl text-white font-medium line-clamp-2 group-hover:text-blue-100 transition-colors font-montserrat">
                      {blog.Title}
                    </h2>
                    <p class="text-white/90 text-sm mt-2 font-roboto">
                      {formatDate(blog.publishedAt)}
                    </p>
                  </div>
                </a>
              );
            })}
          </div>

          {otherBlogs.length > 0 && (
            <div class="max-w-4xl mx-auto">
              <h2 class="text-2xl text-gray-900 mb-12 text-center font-montserrat">Más Artículos</h2>
              <div class="space-y-12">
                {otherBlogs.map((blog) => (
                  <article>
                    <a href={`/blog/${blog.slug}/`} class="block group">
                      <div class="p-6">
                        <div class="grid md:grid-cols-2 gap-6">
                          <div class="aspect-w-16 aspect-h-9 rounded-lg overflow-hidden">
                            <Image
                              src={blog.Cover?.url 
                                ? `${import.meta.env.STRAPI_URL}${blog.Cover.url}`
                                : '/placeholder-image.jpg'}
                              alt={blog.Title}
                              width={400}
                              height={225}
                              class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                            />
                          </div>
                          <div class="flex flex-col justify-center">
                            <h3 class="text-xl text-gray-900 font-medium mb-2 group-hover:text-blue-600 transition-colors font-montserrat">
                              {blog.Title}
                            </h3>
                            <p class="text-gray-500 text-sm mb-4 font-montserrat">
                              {formatDate(blog.publishedAt)}
                            </p>
                            <p class="text-gray-600 line-clamp-2 font-roboto">
                              {extractText(blog.Description)}
                            </p>
                          </div>
                        </div>
                      </div>
                    </a>
                  </article>
                ))}
              </div>

              {totalPages > 1 && (
                <nav class="flex justify-center items-center mt-12 space-x-2">
                  {currentPage > 1 && (
                    <a
                      class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 font-roboto"
                      href={`/blog?page=${currentPage - 1}`}
                    >
                      Anterior
                    </a>
                  )}
                  
                  <div class="flex space-x-2">
                    {Array.from({ length: totalPages }).map((_, i) => (
                      <a
                        href={`/blog?page=${i + 1}`}
                        class={`px-4 py-2 text-sm font-medium rounded-md font-roboto ${
                          currentPage === i + 1
                            ? 'bg-blue-600 text-white'
                            : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50'
                        }`}
                      >
                        {i + 1}
                      </a>
                    ))}
                  </div>

                  {currentPage < totalPages && (
                    <a
                      class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 font-roboto"
                      href={`/blog?page=${currentPage + 1}`}
                    >
                      Siguiente
                    </a>
                  )}
                </nav>
              )}
            </div>
          )}
        </>
      )}
    </div>
  </main>
</BaseLayout>

<style>
  .grid {
    grid-template-rows: repeat(2, 1fr);
  }
</style>